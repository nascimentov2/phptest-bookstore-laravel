name: Run unit tests and create a pull request

on:
  push:
    branches: [ "testing" ]
    paths-ignore:
      - frontend/**
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - frontend/**

jobs:
  run_unit_tests:
    
    defaults:
      run:
        working-directory: backend

    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[CI]') }}
    
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2.3'
    - uses: actions/checkout@v3
      with:
        ref: testing
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.development', '.env');"
    - name: Install Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database using sqlite
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Run unit tests (Unit and Feature tests) using PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  create_PR:

    needs: run_unit_tests

    defaults:
      run:
        working-directory: backend

    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[CI]') }}
    
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2.3'
    - uses: actions/checkout@v3
      with:
        ref: testing
    - name: Dump GitHub events
      env:
        GITHUB_EVENTS: ${{ toJson(github.event) }}
      run: |
        echo "$GITHUB_EVENTS"
    - name: 'Create pull request'
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;
          const pulls = await github.rest.pulls.list({
            owner: owner,
            repo: repo,
            head: context.ref,
            base: 'main',
            state: 'open',
          });
          
          if (pulls.data.length < 1) {
            await github.rest.pulls.create({
              title: "[CI] Merge from testing into main - ${{ github.event.head_commit.message }}",
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'main',
              body: 'This PR is auto-generated by unit-tests.yml file'
            });
          } else {
            const existingPR = pulls.data[0];
            await github.rest.pulls.update({
              owner: owner,
              repo: repo,
              pull_number: existingPR.number,
              body: [
                existingPR.body,
                `Updated by Job ${context.job}`,
              ].join('\n'),
            });
          }
